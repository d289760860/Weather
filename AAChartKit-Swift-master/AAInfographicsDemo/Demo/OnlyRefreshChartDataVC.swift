//
//  OnlyRefreshChartDataVC.swift
//  AAInfographicsDemo
//
//  Created by An An  on 17/4/18.
//  Copyright © 2017年 An An . All rights reserved.
//  source code ----*** https://github.com/AAChartModel/AAChartKit-Swift ***--- source code
//
//

/*
 
 *********************************************************************************
 *
 * ❀❀❀   WARM TIPS!!!   ❀❀❀
 * Please contact me on GitHub,if there are any problems encountered in use.
 * GitHub Issues : https://github.com/AAChartModel/AAChartKit-Swift/issues
 * -------------------------------------------------------------------------------
 * And if you want to contribute for this project, please contact me as well
 * GitHub        : https://github.com/AAChartModel
 * StackOverflow : https://stackoverflow.com/users/7842508/codeforu
 * JianShu       : http://www.jianshu.com/u/f1e6753d4254
 * SegmentFault  : https://segmentfault.com/u/huanghunbieguan
 *
 *********************************************************************************
 
 */

import UIKit

class OnlyRefreshChartDataVC: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        
        self.setUpTheView()

     }
    
    func  setUpTheView() {
        
        //数据来源http://gallery.echartsjs.com/editor.html?c=xBJGEynUhl
        
        let dic = [
//            "xValueList": "xvalue_24h",
//            "queueNameList": ["地狱边境", "机械迷城", "致命框架", "纪念碑谷"],
            
            "2017-01-28": [
                "地狱边境": [0.45, 0.43, 0.50, 0.55, 0.58, 0.62, 0.83, 0.39, 0.56, 0.67, 0.50, 0.34, 0.50, 0.67, 0.58, 0.29, 0.46, 0.23, 0.47, 0.46, 0.38, 0.56, 0.48, 0.36],
                "机械迷城": [0.38, 0.31, 0.32, 0.32, 0.64, 0.66, 0.86, 0.47, 0.52, 0.75, 0.52, 0.56, 0.54, 0.60, 0.46, 0.63, 0.54, 0.51, 0.58, 0.64, 0.60, 0.45, 0.36, 0.67],
                "致命框架": [0.46, 0.32, 0.53, 0.58, 0.86, 0.68, 0.85, 0.73, 0.69, 0.71, 0.91, 0.74, 0.60, 0.50, 0.39, 0.67, 0.55, 0.49, 0.65, 0.45, 0.64, 0.47, 0.63, 0.64],
                "纪念碑谷": [0.60, 0.51, 0.52, 0.53, 0.64, 0.84, 0.65, 0.68, 0.63, 0.47, 0.72, 0.60, 0.65, 0.74, 0.66, 0.65, 0.71, 0.59, 0.65, 0.77, 0.52, 0.53, 0.58, 0.53],
            ],
            "2017-01-29": [
                "地狱边境": [14.1, 33.9, 36.0, 47.1, 39.0, 25.1, 14.9, 8.24, 0, 0, 0, 0, 21.6, 1.36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "机械迷城": [7.19, 8.23, 5.86, 6.54, 5.28, 3.56, 3.20, 4.13, 4.75, 7.74, 7.92, 8.54, 8.15, 8.75, 8.31, 7.65, 8.59, 8.62, 7.97, 8.99, 8.02, 9.61, 8.74, 7.44],
                "致命框架": [0.01, 6.92, 9.11, 9.60, 9.44, 9.67, 9.72, 9.75, 9.73, 9.78, 9.97, 9.96, 9.89, 9.78, 9.70, 10, 9.62, 9.24, 9.28, 7.02, 9.99, 6.40, 5.39, 4.71],
                "纪念碑谷": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            ],
            "2017-01-30": [
                "地狱边境": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "机械迷城": [8.10, 7.36, 8.51, 7.51, 5.05, 3.06, 3.48, 3.74, 5.16, 10.2, 12.5, 9.89, 9.52, 9.80, 10.1, 9.46, 9.35, 9.79, 9.25, 8.81, 8.86, 9.60, 8.81, 8.69],
                "致命框架": [2.73, 2.37, 2.38, 1.99, 1.76, 2.17, 4.59, 2.37, 4.19, 6.31, 4.90, 5.30, 5.11, 5.26, 4.66, 4.92, 6.24, 5.95, 5.33, 5.44, 5.04, 4.70, 4.94, 3.28],
                "纪念碑谷":[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            ],
            "2017-01-31": [
                "地狱边境": [0.45, 0.43, 0.50, 0.55, 0.58, 0.62, 0.83, 0.39, 0.56, 0.67, 0.50, 0.34, 0.50, 0.67, 0.58, 0.29, 0.46, 0.23, 0.47, 0.46, 0.38, 0.56, 0.48, 0.36],
                "机械迷城": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "致命框架": [0.46, 0.32, 0.53, 0.58, 0.86, 0.68, 0.85, 0.73, 0.69, 0.71, 0.91, 0.74, 0.60, 0.50, 0.39, 0.67, 0.55, 0.49, 0.65, 0.45, 0.64, 0.47, 0.63, 0.64],
                "纪念碑谷": [0.60, 0.51, 0.52, 0.53, 0.64, 0.84, 0.65, 0.68, 0.63, 0.47, 0.72, 0.60, 0.65, 0.74, 0.66, 0.65, 0.71, 0.59, 0.65, 0.77, 0.52, 0.53, 0.58, 0.53],
            ],
            "2017-02-01": [
                "地狱边境": [14.1, 33.9, 36.0, 47.1, 39.0, 25.1, 14.9, 8.24, 0, 0, 0, 0, 21.6, 1.36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "机械迷城": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "致命框架": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                "纪念碑谷": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            ],
            "2017-02-02": [
                "机械迷城": [8.10, 7.36, 8.51, 7.51, 5.05, 3.06, 3.48, 3.74, 5.16, 10.2, 12.5, 9.89, 9.52, 9.80, 10.1, 9.46, 9.35, 9.79, 9.25, 8.81, 8.86, 9.60, 8.81, 8.69],
                "致命框架": [2.73, 2.37, 2.38, 1.99, 1.76, 2.17, 4.59, 2.37, 4.19, 6.31, 4.90, 5.30, 5.11, 5.26, 4.66, 4.92, 6.24, 5.95, 5.33, 5.44, 5.04, 4.70, 4.94, 3.28],
                "地狱边境": [0.45, 0.43, 0.50, 0.55, 0.58, 0.62, 0.83, 0.39, 0.56, 0.67, 0.50, 0.34, 0.50, 0.67, 0.58, 0.29, 0.46, 0.23, 0.47, 0.46, 0.38, 0.56, 0.48, 0.36],
                "纪念碑谷": [0.60, 0.51, 0.52, 0.53, 0.64, 0.84, 0.65, 0.68, 0.63, 0.47, 0.72, 0.60, 0.65, 0.74, 0.66, 0.65, 0.71, 0.59, 0.65, 0.77, 0.52, 0.53, 0.58, 0.53],
            ],
            "2017-02-03": [
                "机械迷城": [2.73, 21.3, 41.6, 17.2, 19.9, 1.60, 2.10, 2.54, 2.78, 3.62, 4.41, 4.09, 3.83, 4.47, 4.20, 3.94, 3.80, 3.58, 3.19, 4.30, 3.69, 3.52, 3.02, 3.30],
                "致命框架": [1.51, 28.7, 0.94, 1.44, 18.6, 1.63, 1.56, 1.91, 2.45, 3.87, 3.24, 4.90, 4.61, 4.10, 4.17, 3.85, 4.17, 3.46, 3.46, 3.55, 3.50, 4.13, 2.58, 2.28],
                "地狱边境": [1.33, 4.68, 1.31, 1.10, 13.9, 1.10, 1.16, 1.67, 2.64, 2.86, 3.00, 3.21, 4.14, 4.07, 3.68, 3.11, 3.41, 3.25, 3.32, 3.07, 3.92, 3.05, 2.18, 3.24],
                "纪念碑谷": [3.23, 3.15, 2.90, 1.81, 2.11, 2.43, 5.59, 3.09, 4.09, 6.14, 5.33, 6.05, 5.71, 6.22, 6.56, 4.75, 5.27, 6.02, 5.22, 5.77, 6.19, 5.68, 4.33, 5.48]
            ],
            ] as [String : Any]
        
//        注意：
//        1、(n, c)中n表示元素的输入顺序，c表示集合中的每一个元素；
//        2、由于数组是有序的，所以在数组中n自然也可以表示每一个元素在数组中索引，而字典是无序的，但是n依然会按照0、1、2...的顺序输入，因此不可以代表在字典中的索引。
        //遍历字典
//        for (n, c) in dic.enumerated() {
//            print("\(n): \(c)")
//        }
//

        
        for (key, value) in dic
        {
            print("键值对==\(key) : \(value)")
            
            
        }
//
//
//        print("------------->")
//        print(dic.keys)
//
//
//        print("------------->")
//        print(dic.values)
        
        
//        for key in dic.keys
//        {
//            print("key==\(key)")
//        }
//
//        for value in dic.values
//        {
//            print("value==\(value)")
//        }
//

//     let dicData = dic.values[0]["机械迷城"]
        

        }
    }
    

 
 

